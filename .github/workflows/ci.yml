# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
name: Java CI with Gradle

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

jobs:
    verify-gradle-wrapper:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: gradle/wrapper-validation-action@v1.0.3

    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                jdk: [11, 15]
        steps:
            - uses: actions/checkout@v2
            - uses: actions/cache@v2
              with:
                path: |
                    ~/.gradle/caches
                    ~/.gradle/wrapper
                key: ${{ runner.os }}-jdk-${{ matrix.jdk }}-gradle-${{ hashFiles('**/*.gradle*') }}
                restore-keys: |
                    ${{ runner.os }}-jdk-${{ matrix.jdk }}-gradle-
            - name: Set up JDK
              uses: actions/setup-java@v1
              with:
                  java-version: ${{ matrix.jdk }}
            - run: chmod +x gradlew
            - run: ./gradlew build --stacktrace --warning-mode all

    release:
        runs-on: ubuntu-latest
        needs: [build, verify-gradle-wrapper] # build job must pass before we can release

        if: github.event_name == 'push'
            && github.ref == 'refs/heads/main'
            && github.repository == 'MinimallyCorrect/DefaultsPlugin'
            && !contains(toJSON(github.event.commits.*.message), '[ci skip]')
            && !contains(toJSON(github.event.commits.*.message), '[ci skip-release]')

        steps:
            - name: Check out code
              uses: actions/checkout@v2
              with:
                  fetch-depth: '0' # https://github.com/shipkit/shipkit-changelog#fetch-depth-on-ci

            - name: Set up Java 11
              uses: actions/setup-java@v1
              with:
                  java-version: 11

            - name: Extract branch name
              shell: bash
              run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
              id: extract_branch

            - name: Shipkit ciPerformRelease
              run: ./gradlew ciPerformRelease
              env:
                  TRAVIS_BRANCH: ${{ steps.extract_branch.outputs.branch }}
                  GH_WRITE_TOKEN: ${{secrets.GITHUB_TOKEN}}
                  BINTRAY_API_KEY: ${{secrets.BINTRAY_API_KEY}}
